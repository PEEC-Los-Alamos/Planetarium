#!/usr/bin/perl

#------------------------------------------------------------------------------
# horizonsToNightshade.pl - 
# From the JPL Horizons site, fetch the osculating elements for an asteroid and 
#  convert to the format expected by Nightshade. This script requires the existence 
#  of the Expect script osc_tbl, available from the JPL Horizons ftp site. An input 
#  file, osc_tbl.inp, in the directory from which this script is run, gives the 
#  date(s) for which the elements are desired. A sample osc_tbl.inp is also 
#  available from the Horizons ftp site.
#
# Usage: 
#  horizonsToNightshade.pl "2017 AM13"
#  horizonsToNightshade.pl "265482"
#  horizonsToNightshade.pl "Bennu"
#
# The above forms all work for asteroids. However, for comets, the only form I've 
#  found that works is the following, where CAP refers to the current apparition.
#  horizonsToNightshade.pl "DES=45P; CAP" 
#
# The "DES=" (for designation) appears to be optional for asteroids.
# 
# An optional second argument for this script is the date in the format 
#  "2017-Feb-5" (with quotes) will generate the osc_tbl.inp file. If this is absent,
#  the previous version of that file will be used. 
#
# Galen Gisler, Pajarito Environment Education Center, Los Alamos, NM 87544
# galengisler at mac dotcom
#------------------------------------------------------------------------------

$initFile = "osc_tbl.inp";
$objectName = @ARGV[0];				# Fetch the object name from the script argument
$outputName = "$objectName";		# Construct a name for the output files,
$outputName =~s/ //;				#   without spaces,
$outputName =~s/\;//;				#   or semicolons,
$outputName =~s/DES=//;				#   or the designation flag.

if (defined @ARGV[1]) {
	# if there is a second argument, re-create the osc_tbl.inp file
	$startTime = @ARGV[1];			# Fetch the start time from the argument
	@things = split("-",$startTime);
	$year = @things[0];
	$month = @things[1];
	$day = @things[2];
	$nextyear = $year+1;
	$stopTime = "$nextyear-$month-$day";

	# Create the osc_tbl.inp file. These are my defaults, change as needed.
	# We generally only require the osculating elements for a single date, so 
	# I've made the step size 10 years, and the stop time 1 year later than the
	# requested date. 
	open INITFILE, ">$initFile"  or die ("Can't open write to file $initFile");
	print INITFILE " set   EMAIL_ADDR     \"user\@example.com\" \n";
	print INITFILE " set   CENTER         \"\@Sun\" \n";
	print INITFILE " set   REF_PLANE      \"ECLIP\" \n";
	print INITFILE " set   START_TIME     \"$startTime\" \n";
	print INITFILE " set   STOP_TIME      \"$stopTime\" \n";
	print INITFILE " set   STEP_SIZE      \"10 y\" \n";
	close INITFILE;
} else {
	# read the start time from the existing osc_tbl.inp file
	open (INITFILE, $initFile);
	while (<INITFILE>) {
		@things = split (" ",$_);
		if ($things[1] eq "START_TIME") {
			$startTime = $things[2];
		}
	}
}

print "Running Horizons interface (osc_tbl) for object $objectName at date $startTime\n";
print "For the file names, we have trimmed the name of the object to $outputName\n";
`~/bin/osc_tbl  \"$objectName\" "$outputName.txt"`;

$horizonsFile = "$outputName.txt";			# this is the file generated by osc_tbl
$nightshadeFile = "$outputName.sts";		# this is the file this script generates

open (HORIZONSFILE, $horizonsFile);

while (<HORIZONSFILE>) {					# Read horizons file, look for osculating elements
	if (substr($_,2,3) eq "SOE") {last;}	# We've found them
}
while (<HORIZONSFILE>) {
	@things = split(" ",$_);
	if ($things[2] eq "A.D.") {
		$epoch = $things[0]; 		# the first line starts with the epoch
		last;
	}
}
while (<HORIZONSFILE>) {
	@things = split(" ",$_);
	if ($things[0] eq "EC=") {
		$ecc = $things[1];			# eccentricity
		$qr  = $things[3];			# periapsis distance (AU)
		$inc = $things[5];			# inclination (degrees)
		last;
	}
}
while (<HORIZONSFILE>) {
	@things = split(" ",$_);
	if ($things[0] eq "OM=") {
		$omega = $things[1];		# longitude of ascending node (degrees)
		$w  = $things[4];			# argument of perifocus (degrees)
		$tp = $things[6];			# Time of periapsis (JD)
		last;
	}
}
while (<HORIZONSFILE>) {
	@things = split(" ",$_);
	if ($things[0] eq "N") {
		$n = $things[2];			# mean motion (degrees/day)
		$ma = $things[4];			# mean anomaly (degrees)
		$ta = $things[6];			# true anomaly (degrees)
		last;
	}
}
while (<HORIZONSFILE>) {
	@things = split(" ",$_);
	if ($things[0] eq "A") {
		$a = $things[2];			# semi-major axis (AU)
		$ad = $things[4];			# apoapsis distance (AU)
		$pr = $things[6];			# sidereal orbit period (day)
		last;
	}
}
print "\nOsculating elements from Horizons in file $outputName.txt:\n"; 
print " Epoch = $epoch\n";
print " EC= $ecc QR= $qr IN= $inc\n";
print " OM= $omega W = $w Tp= $tp\n";
print " N = $n MA= $ma TA= $ta\n";
print " A = $a AD= $ad PR= $pr\n";

# Now convert all data to Nightshade format
$smakm = $a * 149597870;			# put semi-major axis in kilometers
$lopc = $omega + $w;				# longitude of pericenter = omega + w
$ml = $omega + $w + $ma;			# mean longitude = omega + w + ma

print "\nNightshade elements in file $outputName.sts:\n";
print " orbit_Epoch              = $epoch\n";
print " orbit_Period             = $pr days\n";
print " orbit_SemiMajorAxis      = $smakm km\n";
print " orbit_Eccentricity       = $ecc\n";
print " orbit_Inclination        = $inc degrees\n";
print " orbit_AscendingNode      = $omega degrees\n";
print " orbit_LongOfPericenter   = $lopc degrees\n";
print " orbit_MeanLongitude      = $ml degrees\n";
print "\n";

# Then write to the Nightshade file
open NIGHTSHADEFILE, ">$nightshadeFile" or die ("Can't open write to file $nightshadeFile");
print NIGHTSHADEFILE "# Script for loading object $outputName\n";
print NIGHTSHADEFILE "# Osculating elements generated for $startTime, JD $epoch\n";
print NIGHTSHADEFILE "# \n";
print NIGHTSHADEFILE "body action load name $outputName";
print NIGHTSHADEFILE " parent Sun radius 0.5";

# The following data will be unknown for newly discovered objects; change as desired
print NIGHTSHADEFILE " oblateness 0.2 albedo 0.6 lighting true color 1.0,1.0,1.0";
print NIGHTSHADEFILE " tex_map bodies/asteroid.png halo true tex_halo bodies/halo.png";
print NIGHTSHADEFILE " rot_pole_ra 0.0 rot_pole_de 45.0 rot_periode 0.2";
print NIGHTSHADEFILE " rot_rotation_offset 0.0 coord_func ell_orbit orbit_Color 1.0,0.0,0.0";

# Now comes the data we`ve acquired from Horizons
print NIGHTSHADEFILE " orbit_Epoch $epoch orbit_Period $pr orbit_visualization_period $pr";
print NIGHTSHADEFILE " orbit_SemiMajorAxis $smakm orbit_Eccentricity $ecc";
print NIGHTSHADEFILE " orbit_Inclination $inc orbit_AscendingNode $omega";
print NIGHTSHADEFILE " orbit_LongOfPericenter $lopc orbit_MeanLongitude $ml";
print NIGHTSHADEFILE "\n";			# conclude the whole with a carriage return

close NIGHTSHADEFILE;

# then store both files in subdirectories
`mv $horizonsFile horizonFiles`;
`mv $nightshadeFile nightshadeFiles`;


